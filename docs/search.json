[{"path":"/LICENSE.html","id":"mit-license","dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 sententia Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/Readme.html","id":"sententia-","dir":"","previous_headings":"","what":"sententia ","title":"sententia ","text":"Sententia provides access media sentiment data Bureau Economic research. homepage {sententia} R package https://github.com/71point4/sententia.","code":""},{"path":"/Readme.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"sententia ","text":"Install GitHub. want availability latest features (risk) can also install development branch.","code":"remotes::install_github(\"71point4/sententia\") remotes::install_github(\"71point4/sententia\", ref = \"dev\")"},{"path":"/Readme.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"sententia ","text":"Check version.","code":"library(sententia) packageVersion(\"sententia\")"},{"path":"/Readme.html","id":"set-api-key","dir":"","previous_headings":"Usage","what":"Set API Key","title":"sententia ","text":"access API ’ll need first specify API key provided BER. wish set key every time, use usethis::edit_r_environ() set key SENTENTIA_KEY. obtain key, please get touch. Contact details DESCRIPTION.","code":"# Example API key (this key will not work). set_api_key(\"700ce27d55e27922a39232f8403602ba\") get_api_key()"},{"path":"/Readme.html","id":"sentiment-index","dir":"","previous_headings":"","what":"Sentiment Index","title":"sententia ","text":"Get media sentiment index values specified media source, model, topic, dictionary, frequency, aggregation method combination.","code":"sent_index(    source = \"all\",    model = \"model_2021-05-15\",    topic = \"global\",    freq = \"week\",    dict = \"loughran\",    aggr = \"sent_logit\"    )"},{"path":"/Readme.html","id":"count-of-articles-that-make-up-sentiment","dir":"","previous_headings":"","what":"Count of articles that make up sentiment","title":"sententia ","text":"Get count number articles specified media source, model, topic, frequency aggregation.","code":"sent_counts(    source = \"all\",    model = \"model_2021-05-15\",    topic = \"global\",    freq = \"week\"    )"},{"path":"/Readme.html","id":"date-polarity","dir":"","previous_headings":"","what":"Date polarity","title":"sententia ","text":"Get count number positive negative articles specified model, topic, dictionary, aggregation method, frequency.","code":"sent_date_polarity(    source = \"all\",    model = \"model_2021-05-15\",    topic = \"global\",    freq = \"week\",    dict = \"loughran\",    aggr = \"sent_logit\"    )"},{"path":"/Readme.html","id":"word-polarity","dir":"","previous_headings":"","what":"Word polarity","title":"sententia ","text":"Get top 50 frequently occurring positive negative words specified model, topic, dictionary, aggregation method, frequency. timeframe words selected depends specified frequency (day = 30 days, week = 3 months, month = 6 months).","code":"sent_word_polarity(    source = \"all\",    model = \"model_2021-05-15\",    topic = \"economy\",    freq = \"month\",    dict = \"loughran\"    )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors","text":"Hanjo Odendaal. Author, maintainer.","code":""},{"path":"/index.html","id":"sententia-","dir":"","previous_headings":"","what":"Media Sentiment Data from the BER API","title":"Media Sentiment Data from the BER API","text":"Sententia provides access media sentiment data Bureau Economic research. homepage {sententia} R package https://github.com/71point4/sententia.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Media Sentiment Data from the BER API","text":"Install GitHub. want availability latest features (risk) can also install development branch.","code":"remotes::install_github(\"71point4/sententia\") remotes::install_github(\"71point4/sententia\", ref = \"dev\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Media Sentiment Data from the BER API","text":"Check version.","code":"library(sententia) packageVersion(\"sententia\")"},{"path":"/index.html","id":"set-api-key","dir":"","previous_headings":"Usage","what":"Set API Key","title":"Media Sentiment Data from the BER API","text":"access API ’ll need first specify API key provided BER. wish set key every time, use usethis::edit_r_environ() set key SENTENTIA_KEY. obtain key, please get touch. Contact details DESCRIPTION.","code":"# Example API key (this key will not work). set_api_key(\"7b58ffa5afcf893d678433a56e0edca4\") get_api_key()"},{"path":"/index.html","id":"sentiment-index","dir":"","previous_headings":"","what":"Sentiment Index","title":"Media Sentiment Data from the BER API","text":"Get media sentiment index values specified media source, model, topic, dictionary, frequency, aggregation method combination.","code":"sent_index(    source = \"all\",    model = \"model_2021-05-15\",    topic = \"global\",    freq = \"month\",    dict = \"loughran\",    aggr = \"sent_logit\"    )  # # A tibble: 734 × 9 #    source published_date dict_name type     aggr_type  mean_sentiment relative absolute sent_log #    <chr>  <chr>          <chr>     <chr>    <chr>               <dbl>    <int>    <dbl>    <int> #  1 all    1970-01-01     loughran  polarity sent_logit        -0.0058        0        0        0 #  2 all    1970-01-01     loughran  polarity sent_logit        -0.969        -1       -1        0 #  3 all    1970-01-01     loughran  polarity sent_logit         0.713         1        1        0 #  4 all    2001-01-01     loughran  polarity sent_logit        -1.49         -1       -1        0 #  5 all    2001-01-01     loughran  polarity sent_logit         0             0        0        0 #  6 all    2001-01-01     loughran  polarity sent_logit         0.741         1        1        0 #  7 all    2001-02-01     loughran  polarity sent_logit        -1.25         -1       -1        0 #  8 all    2001-02-01     loughran  polarity sent_logit        -0.0026        0        0        0 #  9 all    2001-02-01     loughran  polarity sent_logit         0.818         1        1        0 # 10 all    2001-03-01     loughran  polarity sent_logit        -0.0008        0        0        0 # # … with 724 more rows"},{"path":"/index.html","id":"count-of-articles-that-make-up-sentiment","dir":"","previous_headings":"","what":"Count of articles that make up sentiment","title":"Media Sentiment Data from the BER API","text":"Get count number articles specified media source, model, topic, frequency aggregation.","code":"sent_counts(    source = \"all\",    model = \"model_2021-05-15\",    topic = \"global\",    freq = \"week\"    )  # # A tibble: 1,049 × 2 #    published_date article_count #    <chr>                  <int> #  1 1969-12-29                91 #  2 2001-01-01                37 #  3 2001-01-08                56 #  4 2001-01-15                76 #  5 2001-01-22                70 #  6 2001-01-29                19 #  7 2001-02-05                46 #  8 2001-02-12                63 #  9 2001-02-19               140 # 10 2001-02-26               178 # # … with 1,039 more rows"},{"path":"/index.html","id":"date-polarity","dir":"","previous_headings":"","what":"Date polarity","title":"Media Sentiment Data from the BER API","text":"Get count number positive negative articles specified model, topic, dictionary, aggregation method, frequency.","code":"sent_date_polarity(    source = \"all\",    model = \"model_2021-05-15\",    topic = \"global\",    freq = \"week\",    dict = \"loughran\",    aggr = \"sent_logit\"    )  # # A tibble: 3,122 × 7 #    source published_date dict_name type     aggr_type  positive_words negative_words #    <chr>  <chr>          <chr>     <chr>    <chr>               <int>          <int> #  1 all    1969-12-29     loughran  polarity sent_logit              0             59 #  2 all    1969-12-29     loughran  polarity sent_logit              0              0 #  3 all    1969-12-29     loughran  polarity sent_logit             28              0 #  4 all    2001-01-01     loughran  polarity sent_logit              0             32 #  5 all    2001-01-01     loughran  polarity sent_logit              5              0 #  6 all    2001-01-08     loughran  polarity sent_logit              0             40 #  7 all    2001-01-08     loughran  polarity sent_logit              9              0 #  8 all    2001-01-08     loughran  polarity sent_logit              0              0 #  9 all    2001-01-15     loughran  polarity sent_logit             11              0 # 10 all    2001-01-15     loughran  polarity sent_logit              0              0 # # … with 3,112 more rows"},{"path":"/index.html","id":"word-polarity","dir":"","previous_headings":"","what":"Word polarity","title":"Media Sentiment Data from the BER API","text":"Get top 50 frequently occurring positive negative words specified model, topic, dictionary, aggregation method, frequency. timeframe words selected depends specified frequency (day = 30 days, week = 3 months, month = 6 months).","code":"sent_word_polarity(    source = \"all\",    model = \"model_2021-05-15\",    topic = \"economy\",    freq = \"month\",    dict = \"loughran\"    )  # # A tibble: 100 × 8 #    source topic_econ tokens       dict_name sentiment mentions word_rank date_range              #    <chr>  <chr>      <chr>        <chr>     <chr>        <int>     <int> <chr>                   #  1 all    economy    against      loughran  negative      1670         1 2021-02-28 - 2021-08-28 #  2 all    economy    concerns     loughran  negative       852         2 2021-02-28 - 2021-08-28 #  3 all    economy    lost         loughran  negative       790         3 2021-02-28 - 2021-08-28 #  4 all    economy    crisis       loughran  negative       754         4 2021-02-28 - 2021-08-28 #  5 all    economy    losses       loughran  negative       604         5 2021-02-28 - 2021-08-28 #  6 all    economy    unrest       loughran  negative       583         6 2021-02-28 - 2021-08-28 #  7 all    economy    unemployment loughran  negative       554         7 2021-02-28 - 2021-08-28 #  8 all    economy    challenges   loughran  negative       552         8 2021-02-28 - 2021-08-28 #  9 all    economy    late         loughran  negative       530         9 2021-02-28 - 2021-08-28 # 10 all    economy    violence     loughran  negative       528        10 2021-02-28 - 2021-08-28 # # … with 90 more rows"},{"path":"/reference/GET.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for httr::GET() — GET","title":"Wrapper for httr::GET() — GET","text":"Wrapper httr::GET()","code":""},{"path":"/reference/GET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for httr::GET() — GET","text":"","code":"GET(url = NULL, config = list(), retry = 5, ...)"},{"path":"/reference/GET.html","id":"pkg-arg-url","dir":"Reference","previous_headings":"","what":"url (argument)","title":"Wrapper for httr::GET() — GET","text":"url URL retrieve.","code":""},{"path":"/reference/GET.html","id":"pkg-arg-config","dir":"Reference","previous_headings":"","what":"config (argument)","title":"Wrapper for httr::GET() — GET","text":"config Additional configuration settings.","code":""},{"path":"/reference/GET.html","id":"pkg-arg-retry","dir":"Reference","previous_headings":"","what":"retry (argument)","title":"Wrapper for httr::GET() — GET","text":"retry Number times retry request failure.","code":""},{"path":"/reference/GET.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Wrapper for httr::GET() — GET","text":"... named parameters.","code":""},{"path":"/reference/base_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Get base URL for API — base_url","title":"Get base URL for API — base_url","text":"Get base URL API","code":""},{"path":"/reference/base_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get base URL for API — base_url","text":"","code":"base_url()"},{"path":"/reference/base_url.html","id":"section-value","dir":"Reference","previous_headings":"","what":"Value","title":"Get base URL for API — base_url","text":"API base URL.","code":""},{"path":"/reference/check_response_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Check API response for errors — check_response_error","title":"Check API response for errors — check_response_error","text":"Check API response errors","code":""},{"path":"/reference/check_response_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check API response for errors — check_response_error","text":"","code":"check_response_error(response)"},{"path":"/reference/check_response_error.html","id":"pkg-arg-response","dir":"Reference","previous_headings":"","what":"response (argument)","title":"Check API response for errors — check_response_error","text":"response response object.","code":""},{"path":"/reference/check_response_error.html","id":"section-value","dir":"Reference","previous_headings":"","what":"Value","title":"Check API response for errors — check_response_error","text":"NULL. Raises error response error code.","code":""},{"path":"/reference/check_response_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that API response is JSON — check_response_json","title":"Check that API response is JSON — check_response_json","text":"Check API response JSON","code":""},{"path":"/reference/check_response_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that API response is JSON — check_response_json","text":"","code":"check_response_json(response)"},{"path":"/reference/check_response_json.html","id":"pkg-arg-response","dir":"Reference","previous_headings":"","what":"response (argument)","title":"Check that API response is JSON — check_response_json","text":"response response object.","code":""},{"path":"/reference/check_response_json.html","id":"section-value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that API response is JSON — check_response_json","text":"NULL. Raises error response JSON.","code":""},{"path":"/reference/get_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve API key — get_api_key","title":"Retrieve API key — get_api_key","text":"Retrieve API key","code":""},{"path":"/reference/get_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve API key — get_api_key","text":"","code":"get_api_key()"},{"path":"/reference/get_api_key.html","id":"section-value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve API key — get_api_key","text":"API key.","code":""},{"path":"/reference/missing_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if user has specified all the parameters — missing_args","title":"Check if user has specified all the parameters — missing_args","text":"Check user specified parameters","code":""},{"path":"/reference/missing_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if user has specified all the parameters — missing_args","text":"","code":"missing_args()"},{"path":"/reference/missing_args.html","id":"section-value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if user has specified all the parameters — missing_args","text":"character","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/sent_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a count of the number of articles for a specified media source. — sent_counts","title":"Get a count of the number of articles for a specified media source. — sent_counts","text":"Get count number articles specified media source.","code":""},{"path":"/reference/sent_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a count of the number of articles for a specified media source. — sent_counts","text":"","code":"sent_counts(source, model, topic, freq)"},{"path":"/reference/sent_counts.html","id":"pkg-arg-source","dir":"Reference","previous_headings":"","what":"source (argument)","title":"Get a count of the number of articles for a specified media source. — sent_counts","text":"source news source data sought. Data can either drawn sources (sourc=), News24 (source=news24), Business Day (source=businessday)..","code":""},{"path":"/reference/sent_counts.html","id":"pkg-arg-model","dir":"Reference","previous_headings":"","what":"model (argument)","title":"Get a count of the number of articles for a specified media source. — sent_counts","text":"model name model use. Even general index (.e. topics) requires model name.","code":""},{"path":"/reference/sent_counts.html","id":"pkg-arg-topic","dir":"Reference","previous_headings":"","what":"topic (argument)","title":"Get a count of the number of articles for a specified media source. — sent_counts","text":"topic topic interested .","code":""},{"path":"/reference/sent_counts.html","id":"pkg-arg-freq","dir":"Reference","previous_headings":"","what":"freq (argument)","title":"Get a count of the number of articles for a specified media source. — sent_counts","text":"freq frequency aggregate index. Available values: day, week, month.","code":""},{"path":"/reference/sent_counts.html","id":"section-value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a count of the number of articles for a specified media source. — sent_counts","text":"tibble.","code":""},{"path":"/reference/sent_date_polarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a count of the number of positive and negative articles. — sent_date_polarity","title":"Get a count of the number of positive and negative articles. — sent_date_polarity","text":"Get count number positive negative articles.","code":""},{"path":"/reference/sent_date_polarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a count of the number of positive and negative articles. — sent_date_polarity","text":"","code":"sent_date_polarity(source, model, topic, freq, dict, aggr)"},{"path":"/reference/sent_date_polarity.html","id":"pkg-arg-source","dir":"Reference","previous_headings":"","what":"source (argument)","title":"Get a count of the number of positive and negative articles. — sent_date_polarity","text":"source news source data sought. Data can either drawn sources (sourc=), News24 (source=news24), Business Day (source=businessday)..","code":""},{"path":"/reference/sent_date_polarity.html","id":"pkg-arg-model","dir":"Reference","previous_headings":"","what":"model (argument)","title":"Get a count of the number of positive and negative articles. — sent_date_polarity","text":"model name model use. Even general index (.e. topics) requires model name.","code":""},{"path":"/reference/sent_date_polarity.html","id":"pkg-arg-topic","dir":"Reference","previous_headings":"","what":"topic (argument)","title":"Get a count of the number of positive and negative articles. — sent_date_polarity","text":"topic topic interested .","code":""},{"path":"/reference/sent_date_polarity.html","id":"pkg-arg-freq","dir":"Reference","previous_headings":"","what":"freq (argument)","title":"Get a count of the number of positive and negative articles. — sent_date_polarity","text":"freq frequency aggregate index. Available values: day, week, month.","code":""},{"path":"/reference/sent_date_polarity.html","id":"pkg-arg-dict","dir":"Reference","previous_headings":"","what":"dict (argument)","title":"Get a count of the number of positive and negative articles. — sent_date_polarity","text":"dict dictionary use sentiment characterization index. Available values: afinn, anew, geninqposneg, huliu, loughran, lsd2015, nrc, vader.","code":""},{"path":"/reference/sent_date_polarity.html","id":"pkg-arg-aggr","dir":"Reference","previous_headings":"","what":"aggr (argument)","title":"Get a count of the number of positive and negative articles. — sent_date_polarity","text":"aggr aggregation method use. Available values: sent_abspropdiff, sent_relpropdiff, sent_logit, sent_vader, sent_valence.","code":""},{"path":"/reference/sent_date_polarity.html","id":"section-value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a count of the number of positive and negative articles. — sent_date_polarity","text":"tibble.","code":""},{"path":"/reference/sent_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull a specific media sentiment index — sent_index","title":"Pull a specific media sentiment index — sent_index","text":"Pull specific media sentiment index","code":""},{"path":"/reference/sent_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull a specific media sentiment index — sent_index","text":"","code":"sent_index(source, model, topic, freq, dict, aggr)"},{"path":"/reference/sent_index.html","id":"pkg-arg-source","dir":"Reference","previous_headings":"","what":"source (argument)","title":"Pull a specific media sentiment index — sent_index","text":"source news source data sought. Data can either drawn sources (sourc=), News24 (source=news24), Business Day (source=businessday)..","code":""},{"path":"/reference/sent_index.html","id":"pkg-arg-model","dir":"Reference","previous_headings":"","what":"model (argument)","title":"Pull a specific media sentiment index — sent_index","text":"model name model use. Even general index (.e. topics) requires model name.","code":""},{"path":"/reference/sent_index.html","id":"pkg-arg-topic","dir":"Reference","previous_headings":"","what":"topic (argument)","title":"Pull a specific media sentiment index — sent_index","text":"topic topic interested .","code":""},{"path":"/reference/sent_index.html","id":"pkg-arg-freq","dir":"Reference","previous_headings":"","what":"freq (argument)","title":"Pull a specific media sentiment index — sent_index","text":"freq frequency aggregate index. Available values: day, week, month.","code":""},{"path":"/reference/sent_index.html","id":"pkg-arg-dict","dir":"Reference","previous_headings":"","what":"dict (argument)","title":"Pull a specific media sentiment index — sent_index","text":"dict dictionary use sentiment characterization index. Available values: afinn, anew, geninqposneg, huliu, loughran, lsd2015, nrc, vader.","code":""},{"path":"/reference/sent_index.html","id":"pkg-arg-aggr","dir":"Reference","previous_headings":"","what":"aggr (argument)","title":"Pull a specific media sentiment index — sent_index","text":"aggr aggregation method use. Available values: sent_abspropdiff, sent_relpropdiff, sent_logit, sent_vader, sent_valence.","code":""},{"path":"/reference/sent_index.html","id":"section-value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull a specific media sentiment index — sent_index","text":"tibble.","code":""},{"path":"/reference/sent_word_polarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the top 50 most frequently occurring positive and negative words. — sent_word_polarity","title":"Get the top 50 most frequently occurring positive and negative words. — sent_word_polarity","text":"Get top 50 frequently occurring positive negative words specified model, topic, dictionary, aggregation method, frequency. timeframe words selected depends specified frequency (day = 30 days, week = 3 months, month = 6 months).","code":""},{"path":"/reference/sent_word_polarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the top 50 most frequently occurring positive and negative words. — sent_word_polarity","text":"","code":"sent_word_polarity(source, model, topic, freq, dict)"},{"path":"/reference/sent_word_polarity.html","id":"pkg-arg-source","dir":"Reference","previous_headings":"","what":"source (argument)","title":"Get the top 50 most frequently occurring positive and negative words. — sent_word_polarity","text":"source news source data sought. Data can either drawn sources (sourc=), News24 (source=news24), Business Day (source=businessday)..","code":""},{"path":"/reference/sent_word_polarity.html","id":"pkg-arg-model","dir":"Reference","previous_headings":"","what":"model (argument)","title":"Get the top 50 most frequently occurring positive and negative words. — sent_word_polarity","text":"model name model use. Even general index (.e. topics) requires model name.","code":""},{"path":"/reference/sent_word_polarity.html","id":"pkg-arg-topic","dir":"Reference","previous_headings":"","what":"topic (argument)","title":"Get the top 50 most frequently occurring positive and negative words. — sent_word_polarity","text":"topic topic interested .","code":""},{"path":"/reference/sent_word_polarity.html","id":"pkg-arg-freq","dir":"Reference","previous_headings":"","what":"freq (argument)","title":"Get the top 50 most frequently occurring positive and negative words. — sent_word_polarity","text":"freq frequency aggregate index. Available values: day, week, month.","code":""},{"path":"/reference/sent_word_polarity.html","id":"pkg-arg-dict","dir":"Reference","previous_headings":"","what":"dict (argument)","title":"Get the top 50 most frequently occurring positive and negative words. — sent_word_polarity","text":"dict dictionary use sentiment characterization index. Available values: afinn, anew, geninqposneg, huliu, loughran, lsd2015, nrc, vader.","code":""},{"path":"/reference/sent_word_polarity.html","id":"section-value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the top 50 most frequently occurring positive and negative words. — sent_word_polarity","text":"tibble.","code":""},{"path":"/reference/set_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Set API key — set_api_key","title":"Set API key — set_api_key","text":"Specify key accessing sententia API. Automatically determines type key used authenticates appropriately.","code":""},{"path":"/reference/set_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set API key — set_api_key","text":"","code":"set_api_key(api_key)"},{"path":"/reference/set_api_key.html","id":"pkg-arg-api_key","dir":"Reference","previous_headings":"","what":"api_key (argument)","title":"Set API key — set_api_key","text":"api_key API key.","code":""},{"path":"/reference/set_base_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Set base URL for API  when testing — set_base_url","title":"Set base URL for API  when testing — set_base_url","text":"Set base URL API  testing","code":""},{"path":"/reference/set_base_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set base URL for API  when testing — set_base_url","text":"","code":"set_base_url(url)"},{"path":"/reference/set_base_url.html","id":"pkg-arg-url","dir":"Reference","previous_headings":"","what":"url (argument)","title":"Set base URL for API  when testing — set_base_url","text":"url URL access API.","code":""},{"path":"/reference/set_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Set IP and port for API server when testing — set_server","title":"Set IP and port for API server when testing — set_server","text":"Set IP port API server testing","code":""},{"path":"/reference/set_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set IP and port for API server when testing — set_server","text":"","code":"set_server(ip, port)"},{"path":"/reference/set_server.html","id":"pkg-arg-ip","dir":"Reference","previous_headings":"","what":"ip (argument)","title":"Set IP and port for API server when testing — set_server","text":"ip IP address API server.","code":""},{"path":"/reference/set_server.html","id":"pkg-arg-port","dir":"Reference","previous_headings":"","what":"port (argument)","title":"Set IP and port for API server when testing — set_server","text":"port Port API running.","code":""},{"path":"/news/index.html","id":"sententia-010","dir":"Changelog","previous_headings":"","what":"sententia 0.1.0","title":"sententia 0.1.0","text":"Launch basic API.","code":""}]
